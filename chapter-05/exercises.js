// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(matrix) {
  return matrix.reduce((acc, curr) => acc.concat(curr), []);
  
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

let loop = function(value, test, update, body){
  for(let i = value; test(i); i = update(i)){
    body(i);
    
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, func) {
  for(let i = 0; i < array.length; i++){
  
    if (!func(array[i])){
     return false
   } 
 }
 return true
};



// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
  let ltr = [];
  let rtl = [];

  for(let i = 0; i < string.length; i++){
    let script = characterScript(string.charCodeAt(i))
    if(script !== null){
      if(script.direction === "ltr"){
        ltr.push(script);
      } else {
        rtl.push(script);
      }
    }
  }
if(ltr.length > rtl.length){
  return "ltr";
} else {
    return "rtl";
  }
}


// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};